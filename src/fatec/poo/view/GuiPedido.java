/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.poo.view;

import fatec.poo.model.Cliente;
import fatec.poo.model.ItemPedido;
import fatec.poo.model.Pedido;
import fatec.poo.model.Pessoa;
import fatec.poo.model.Produto;
import fatec.poo.model.Vendedor;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinicius
 */
public class GuiPedido extends javax.swing.JFrame {

    /**
     * Creates new form GuiPedido
     */
    public GuiPedido(ArrayList <Pedido> objPed, ArrayList <Pessoa> objPess, ArrayList <Produto> objProd) {
        initComponents();
        cadPedido = objPed;
        cadPessoa = objPess;
        cadProduto = objProd;
        tblItemP = (DefaultTableModel) tblItemPedido.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSair = new javax.swing.JButton();
        pnlPedido = new javax.swing.JPanel();
        lblNumPedido = new javax.swing.JLabel();
        txtNumPedido = new javax.swing.JTextField();
        btnConsultarPedido = new javax.swing.JButton();
        txtfdDataPedido = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        cmbxFormaPagamento = new javax.swing.JComboBox<>();
        pnlCliente = new javax.swing.JPanel();
        lblCPFcliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        btnConsultarCliente = new javax.swing.JButton();
        txtfdCPFCliente = new javax.swing.JFormattedTextField();
        pnlVendedor = new javax.swing.JPanel();
        lblCPFVendedor = new javax.swing.JLabel();
        txtNomeVendedor = new javax.swing.JTextField();
        btnConsultarVendedor = new javax.swing.JButton();
        txtfdCPFVendedor = new javax.swing.JFormattedTextField();
        pnbItensPedido = new javax.swing.JPanel();
        lblCodProduto = new javax.swing.JLabel();
        btnConsultarProduto = new javax.swing.JButton();
        txtConsultarProduto = new javax.swing.JTextField();
        txtDescProduto = new javax.swing.JTextField();
        lblQtdeVendida = new javax.swing.JLabel();
        btnAdicionarItem = new javax.swing.JButton();
        btnRemoverItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItemPedido = new javax.swing.JTable();
        txtValorTotalPedido = new javax.swing.JTextField();
        lblVlrTlPdo = new javax.swing.JLabel();
        lblQtdeItnsPds = new javax.swing.JLabel();
        txtQtdeItensPedidos = new javax.swing.JTextField();
        txtQtdeVendida = new javax.swing.JFormattedTextField();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Emitir Pedido");

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Sair.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        pnlPedido.setBorder(javax.swing.BorderFactory.createTitledBorder("Pedido"));

        lblNumPedido.setText("NÃºmero do Pedido");

        btnConsultarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnConsultarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPedidoActionPerformed(evt);
            }
        });

        try {
            txtfdDataPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfdDataPedido.setEnabled(false);
        txtfdDataPedido.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        txtfdDataPedido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfdDataPedidoFocusLost(evt);
            }
        });

        jLabel1.setText("Forma de Pagamento");

        cmbxFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A vista", "A prazo" }));
        cmbxFormaPagamento.setEnabled(false);
        cmbxFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxFormaPagamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPedidoLayout = new javax.swing.GroupLayout(pnlPedido);
        pnlPedido.setLayout(pnlPedidoLayout);
        pnlPedidoLayout.setHorizontalGroup(
            pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNumPedido)
                .addGap(18, 18, 18)
                .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultarPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfdDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        pnlPedidoLayout.setVerticalGroup(
            pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultarPedido)
                    .addGroup(pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumPedido)
                        .addComponent(txtNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfdDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(cmbxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Cliente"));

        lblCPFcliente.setText("CPF Cliente");

        txtNomeCliente.setEditable(false);

        btnConsultarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnConsultarCliente.setEnabled(false);
        btnConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarClienteActionPerformed(evt);
            }
        });

        try {
            txtfdCPFCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfdCPFCliente.setEnabled(false);
        txtfdCPFCliente.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCPFcliente)
                .addGap(18, 18, 18)
                .addComponent(txtfdCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeCliente)
                .addContainerGap())
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultarCliente)
                    .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCPFcliente)
                        .addComponent(txtfdCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlVendedor.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Vendedor"));

        lblCPFVendedor.setText("CPF Vendedor");

        txtNomeVendedor.setEditable(false);

        btnConsultarVendedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnConsultarVendedor.setEnabled(false);
        btnConsultarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarVendedorActionPerformed(evt);
            }
        });

        try {
            txtfdCPFVendedor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfdCPFVendedor.setEnabled(false);
        txtfdCPFVendedor.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        javax.swing.GroupLayout pnlVendedorLayout = new javax.swing.GroupLayout(pnlVendedor);
        pnlVendedor.setLayout(pnlVendedorLayout);
        pnlVendedorLayout.setHorizontalGroup(
            pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCPFVendedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfdCPFVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultarVendedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeVendedor)
                .addContainerGap())
        );
        pnlVendedorLayout.setVerticalGroup(
            pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultarVendedor)
                    .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCPFVendedor)
                        .addComponent(txtfdCPFVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNomeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnbItensPedido.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens do Pedido"));

        lblCodProduto.setText("CÃ³digo do Produto");

        btnConsultarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnConsultarProduto.setEnabled(false);
        btnConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarProdutoActionPerformed(evt);
            }
        });

        txtConsultarProduto.setEnabled(false);

        txtDescProduto.setEditable(false);

        lblQtdeVendida.setText("Qtde Vendida");

        btnAdicionarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Inserir.png"))); // NOI18N
        btnAdicionarItem.setText("Adicionar Item");
        btnAdicionarItem.setToolTipText("");
        btnAdicionarItem.setEnabled(false);
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });

        btnRemoverItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Remover.png"))); // NOI18N
        btnRemoverItem.setText("Remover Item");
        btnRemoverItem.setEnabled(false);
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        tblItemPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "DescriÃ§Ã£o", "Prec. Unit.", "Qtde. Vend.", "SubTotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItemPedido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblItemPedidoFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblItemPedido);

        txtValorTotalPedido.setEditable(false);

        lblVlrTlPdo.setText("Valor Total do Pedido");

        lblQtdeItnsPds.setText("Quantidade de Itens Pedidos");

        txtQtdeItensPedidos.setEditable(false);

        txtQtdeVendida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtQtdeVendida.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        txtQtdeVendida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdeVendidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnbItensPedidoLayout = new javax.swing.GroupLayout(pnbItensPedido);
        pnbItensPedido.setLayout(pnbItensPedidoLayout);
        pnbItensPedidoLayout.setHorizontalGroup(
            pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnbItensPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnbItensPedidoLayout.createSequentialGroup()
                        .addComponent(lblCodProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConsultarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConsultarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnbItensPedidoLayout.createSequentialGroup()
                                .addComponent(btnAdicionarItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRemoverItem)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnbItensPedidoLayout.createSequentialGroup()
                                .addComponent(txtDescProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblQtdeVendida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQtdeVendida, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnbItensPedidoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVlrTlPdo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblQtdeItnsPds, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQtdeItensPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        pnbItensPedidoLayout.setVerticalGroup(
            pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnbItensPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDescProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblQtdeVendida)
                        .addComponent(txtQtdeVendida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConsultarProduto)
                    .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCodProduto)
                        .addComponent(txtConsultarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoverItem)
                    .addComponent(btnAdicionarItem))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVlrTlPdo)
                    .addComponent(txtValorTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnbItensPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQtdeItensPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtdeItnsPds)))
        );

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Remover.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Alterar.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Inserir.png"))); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.setEnabled(false);
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnbItensPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pnlPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnbItensPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnIncluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        int i = 0;
        boolean descartar = false;
        
        if (posPedido == -1){
            i = JOptionPane.showConfirmDialog(null,"Deseja Sair sem incluir o pedido? "
                    + " O pedido nÃ£o serÃ¡ salvo.",
                    "AtenÃ§Ã£o", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if (i == 0){descartar = true;}    
        }
        
        if (objPedido != null){
            if (descartar && objPedido.getCliente() != null){
                double recupCliCred;
                recupCliCred = totalPedido;
                objPedido.getCliente().setLimiteCred(recupCliCred + objPedido.getCliente().getLimiteDisp());
                objPedido.getCliente().removePedido(objPedido);
                if (objPedido.getVendedor() != null)
                    objPedido.getVendedor().removePedido(objPedido);

                if (!objPedido.getItemPedido().isEmpty()){

                    //desfazendo alteraÃ§Ãµes produto
                    int a;
                    double restauraEstoque;

                    for (a=0; a < objPedido.getItemPedido().size(); a++){
                        restauraEstoque = objPedido.getItemPedido().get(a).getQtdeVendida() + 
                                objPedido.getItemPedido().get(a).getProduto().getQtdeEstoque();

                        objPedido.getItemPedido().get(a).getProduto().setQtdeEstoque(restauraEstoque);
                    }
                }
            }
    }
        if (i == 0){
            dispose();}
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnConsultarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPedidoActionPerformed
        
        int c;
        
        for (c=0; c<cadPedido.size(); c++){
            if (cadPedido.get(c).getNumero().equals(txtNumPedido.getText()))
                break;
        }
        
        if (c < cadPedido.size()){
            posPedido = c;
        }
        
        else{
            posPedido = -1;
        }

        //Achou
        if (posPedido >= 0){
            
            txtNumPedido.setText(cadPedido.get(posPedido).getNumero()); 
            txtfdDataPedido.setText(cadPedido.get(posPedido).getDataEmissao());
            if (cadPedido.get(posPedido).getFormaPagto()){
                cmbxFormaPagamento.setSelectedIndex(1);
            }
            else
                cmbxFormaPagamento.setSelectedIndex(0);
            
            //Carregando nome do cliente e vendedor
            txtNomeCliente.setText(cadPedido.get(posPedido).getCliente().getNome());
            txtNomeVendedor.setText(cadPedido.get(posPedido).getVendedor().getNome());
            
            //Carregando o item pedido no table
            int i;
            double subtotal;
            ArrayList <ItemPedido> objItemPedido = cadPedido.get(posPedido).getItemPedido();
            
            for (i = 0; i <objItemPedido.size(); i++){
                subtotal = objItemPedido.get(i).getProduto().getPreco() * objItemPedido.get(i).getQtdeVendida();
                
                String a[] = {objItemPedido.get(i).getProduto().getCodigo(),
                              objItemPedido.get(i).getProduto().getDescricao(),
                              Double.toString(objItemPedido.get(i).getProduto().getPreco()),
                              Double.toString(objItemPedido.get(i).getQtdeVendida()),
                              Double.toString(subtotal)};
                
                tblItemP.addRow(a);
                totalPedido += subtotal;
                qtdeItensPedidos += objItemPedido.get(i).getQtdeVendida();
 
            }
            
            txtValorTotalPedido.setText(Double.toString(totalPedido));
            txtQtdeItensPedidos.setText(Double.toString(qtdeItensPedidos));
            //btnAlterar.setEnabled(true);
            btnExcluir.setEnabled(true);
            btnRemoverItem.setEnabled(true);
            txtConsultarProduto.setEnabled(true);
            btnConsultarProduto.setEnabled(true);
            txtConsultarProduto.requestFocus();
            //Restaurando a sequÃªncia
            seq = objItemPedido.get(i-1).getSequencia();
            objPedido = cadPedido.get(posPedido);
            cmbxFormaPagamento.setEnabled(true);
            cbmxInicio = true;
            btnAlterar.setEnabled(true);
         
        }
        
        //nao achou
        else{
            txtfdDataPedido.setEnabled(true);
            cmbxFormaPagamento.setEnabled(true);
            //btnInserirPedido.setEnabled(true);
            
            //btnConsultarCliente.setEnabled(true);
            txtfdCPFCliente.setEnabled(true);
            
        }
        
        btnConsultarPedido.setEnabled(false);
        txtNumPedido.setEnabled(false);
        
    }//GEN-LAST:event_btnConsultarPedidoActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        //ApÃ³s o pedido estar completo, ele pode ser salvo no ArrayList de pedidos
        
        cadPedido.add(objPedido);
        //permite saber se foi ou nao instanciado e dÃ¡ possibilidade de restaurar sua posiÃ§Ã£o
        posPedido = cadPedido.indexOf(objPedido);
        btnExcluir.setEnabled(true);
        btnIncluir.setEnabled(false);
        txtConsultarProduto.requestFocus();
        
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarClienteActionPerformed
        int c;
            
            for (c=0; c < cadPessoa.size(); c++ ){

                if (cadPessoa.get(c).getCpf().equals(txtfdCPFCliente.getText()) && (cadPessoa.get(c) instanceof Cliente)){
                    break;
                }

            }
            
            if (c < cadPessoa.size()){
                posCliente = c;
            }

            else{
                posCliente = -1;
            }
            
            //Encontrou
            if (posCliente >= 0){
                txtNomeCliente.setText(cadPessoa.get(posCliente).getNome());
                
                //fazendo a ligaÃ§Ã£o cliente com o pedido
                cadPessoa.get(posCliente).addPedido(objPedido);
                
                //ativando, desativando campos e botÃµes
                txtfdCPFCliente.setEnabled(false);
                btnConsultarCliente.setEnabled(false);
                txtfdCPFVendedor.setEnabled(true);
                btnConsultarVendedor.setEnabled(true);
                
                txtfdCPFVendedor.requestFocus();
                
            }
            //NÃ£o encontrou
            else{
                JOptionPane.showMessageDialog(null,"CPF nÃ£o encontrado","Erro",JOptionPane.INFORMATION_MESSAGE);
                txtfdCPFCliente.setText(null);
                txtfdCPFCliente.requestFocus();

            }
            //Ativando/Desativando campos para ediÃ§Ã£o ou inserÃ§Ã£o
    }//GEN-LAST:event_btnConsultarClienteActionPerformed

    private void btnConsultarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarVendedorActionPerformed
        // TODO add your handling code here:
        int c;
            
            for (c=0; c < cadPessoa.size(); c++ ){

                if (cadPessoa.get(c).getCpf().equals(txtfdCPFVendedor.getText()) && (cadPessoa.get(c) instanceof Vendedor)){
                    break;
                }
            }

            if (c < cadPessoa.size()){
                posVendedor = c;
            }

            else{
                posVendedor = -1;
            }
            
            //Encontrou
            if (posVendedor >= 0){
                //carregando o nome do vendedor
                txtNomeVendedor.setText(cadPessoa.get(posVendedor).getNome());
                
                //fazendo a ligaÃ§Ã£o cliente com o pedido
                cadPessoa.get(posVendedor).addPedido(objPedido);
                
                //ativando, desativando campos e botÃµes
                txtfdCPFVendedor.setEnabled(false);
                btnConsultarVendedor.setEnabled(false);
                txtConsultarProduto.setEnabled(true);
                btnConsultarProduto.setEnabled(true);
                txtConsultarProduto.requestFocus();
                
            }
            //NÃ£o encontrou
            else{
                JOptionPane.showMessageDialog(null,"CPF nÃ£o encontrado","Erro",JOptionPane.INFORMATION_MESSAGE);
                txtfdCPFVendedor.setText(null);
                txtfdCPFVendedor.requestFocus();

            }
            //Ativando/Desativando campos para ediÃ§Ã£o ou inserÃ§Ã£o
    }//GEN-LAST:event_btnConsultarVendedorActionPerformed

    private void btnConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarProdutoActionPerformed
        int c;

            for (c=0; c < cadProduto.size(); c++ ){

                if (cadProduto.get(c).getCodigo().equals(txtConsultarProduto.getText())){

                    break;
                }
            }

            if (c < cadProduto.size()){
                posProduto = c;
            }

            else{
                posProduto = -1;
            }

            //Encontrou
            if (posProduto >= 0){

                btnAdicionarItem.setEnabled(true);
		
		txtQtdeVendida.setEnabled(true);

                //Carregando atributos para editar
                txtDescProduto.setText(cadProduto.get(posProduto).getDescricao());
                //Foco
                txtQtdeVendida.requestFocus();
            }
            //NÃ£o encontrou
            else{
                JOptionPane.showMessageDialog(null,"Produto nÃ£o cadastrado","Erro",JOptionPane.INFORMATION_MESSAGE);
                txtConsultarProduto.setText(null);
                txtConsultarProduto.requestFocus();

            }
    }//GEN-LAST:event_btnConsultarProdutoActionPerformed

    @SuppressWarnings("empty-statement")
    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
        
        DecimalFormat qtdeFormato = new DecimalFormat("#");
        ItemPedido objItemPedido = null;
        double qtdeReq = 0, qtdeProdDisp;
        int a, posItemTbl = -1;
        boolean s = false;
        
        
        qtdeProdDisp = cadProduto.get(posProduto).getQtdeEstoque();
        
          
        //Conferindo se o campo estÃ¡ vazio
        if(txtQtdeVendida.getText() == null || txtQtdeVendida.getText().trim().isEmpty()){
            
            JOptionPane.showMessageDialog(null,"Por favor insira um valor no campo \"Qtde Vendida\"",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
            txtQtdeVendida.requestFocus();
            
        }
        
        else{
            try{
                qtdeReq = Double.parseDouble(txtQtdeVendida.getText());
                s = true;
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null,"Por favor insira apenas numeros no campo",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
                txtQtdeVendida.requestFocus();
                txtQtdeVendida.setText(null);
                s = false;
            }
            
        }
        //Conferindo se Ã© maior que 0
        if (qtdeReq <= 0 && s){
            JOptionPane.showMessageDialog(null,"Por favor insira uma quantidade maior que '0' (Zero)",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
            
            txtQtdeVendida.setText(null);
            txtQtdeVendida.requestFocus();
        }
        
        else if(s){
            
            //Aqui entra o novo complemento
            //Analisa se jÃ¡ existe este produto no item pedido5

            for (a=0 ; a < tblItemPedido.getRowCount(); a++){

                if (tblItemP.getValueAt(a, 0).equals(txtConsultarProduto.getText())){
                    posItemTbl = a;
                    break;
                }
            }
            //encontrou um item jÃ¡ existente
            if (posItemTbl >= 0){

                ItemPedido ips = null;
                //adiÃ§ao da qtde de itens
                for (a=0; a < objPedido.getItemPedido().size(); a++){
                    if (txtConsultarProduto.getText().equals(objPedido.getItemPedido().get(a).getProduto().getCodigo())){
                        ips = objPedido.getItemPedido().get(a);
                        break;
                    }
                }
                //Analisar se a adiÃ§Ã£o vai ou nÃ£o extrapolar a qtde de estoque
                double updateQtde, precoAdd;
                updateQtde = ips.getQtdeVendida() + qtdeReq;
                precoAdd = ips.getProduto().getPreco() * qtdeReq;

                if (qtdeReq > qtdeProdDisp){
                    JOptionPane.showMessageDialog(null, "A quantidade requisitada excede o estoque do produto. " +
                        "O produto " + cadProduto.get(posProduto).getDescricao() +
                        " tem o estoque atual de " + qtdeFormato.format(cadProduto.get(posProduto).getQtdeEstoque()) + 
                        " unidades",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);

                    txtConsultarProduto.setText(null);
                    txtDescProduto.setText(null);
                    txtQtdeVendida.setText(null);
                    txtConsultarProduto.requestFocus();
                }

                //Analisar se a adiÃ§Ã£o vai ou nÃ£o extrapolar o limite do cliente
                else if (objPedido.getCliente().getLimiteDisp() < precoAdd){
                    JOptionPane.showMessageDialog(null,"O valor deste(s) item(ns) excede o limite disponivel do cliente."
                            + " O valor atual do limite do cliente \"" + cadPessoa.get(posCliente).getNome() + "\"" +
                            " Ã© de " + ((Cliente)cadPessoa.get(posCliente)).getLimiteDisp() + " reais.",
                            "Erro",JOptionPane.INFORMATION_MESSAGE);
                }

                //Atualizando a qtde vendida, cliente, grid, limpando, desativando e focando em campos/botoes
                else {

                    ips.setQtdeVendida(updateQtde);
                    //diminuindo o estoque do produto
                    ips.getProduto().setQtdeEstoque(ips.getProduto().getQtdeEstoque() - qtdeReq);
                    objPedido.getCliente().setLimiteCred(objPedido.getCliente().getLimiteDisp() - precoAdd);
                    //Atualizar o grid
                    tblItemP.setValueAt(updateQtde, posItemTbl, 3);
                    tblItemP.setValueAt(ips.getProduto().getPreco() * updateQtde, posItemTbl, 4);
                    double newTotalValor, newTotalQtde;
                    newTotalValor = Double.parseDouble(txtValorTotalPedido.getText()) + ips.getProduto().getPreco() * qtdeReq;
                    newTotalQtde = Double.parseDouble(txtQtdeItensPedidos.getText()) + qtdeReq;
                    txtValorTotalPedido.setText(Double.toString(newTotalValor));
                    txtQtdeItensPedidos.setText(Double.toString(newTotalQtde));

                    txtConsultarProduto.setText(null);
                    txtDescProduto.setText(null);
                    txtQtdeVendida.setText(null);
                    btnAdicionarItem.setEnabled(false);
                    txtConsultarProduto.requestFocus();

                    totalPedido = newTotalValor;
                    qtdeItensPedidos = newTotalQtde;
                }

            }
            //aqui termina ele        
            //Analisando se qtde requisitada excede a qtde em estoque
            else if (qtdeReq > qtdeProdDisp){
                JOptionPane.showMessageDialog(null, "A quantidade requisitada excede o estoque do produto. " +
                        "O produto " + cadProduto.get(posProduto).getDescricao() +
                        " tem o estoque atual de " + qtdeFormato.format(cadProduto.get(posProduto).getQtdeEstoque()) + 
                        " unidades",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
                txtQtdeVendida.setText(null);
                txtQtdeVendida.setEnabled(false);
                txtDescProduto.setText(null);
                txtConsultarProduto.setText(null);
                txtConsultarProduto.requestFocus();
            }
            else {
                //Sendo criada  a instanciaÃ§Ã£o do item pedido para instanciar itemPedido

                objItemPedido = new ItemPedido(seq++, qtdeReq, cadProduto.get(posProduto));

                //Analisando se extrapola ou nÃ£o o limite do cliente para ligar itemPedido com pedido
                qtdeProdDisp = qtdeReq * cadProduto.get(posProduto).getPreco();
                //System.out.println(qtdeProdDisp + ">" + ((Cliente)cadPessoa.get(posCliente)).getLimiteDisp());
                if (qtdeProdDisp > ((Cliente)cadPessoa.get(posCliente)).getLimiteDisp()){
                    JOptionPane.showMessageDialog(null,"O valor deste(s) item(ns) excede o limite disponivel do cliente."
                            + " O valor atual do limite do cliente \"" + cadPessoa.get(posCliente).getNome() + "\"" +
                            " Ã© de " + ((Cliente)cadPessoa.get(posCliente)).getLimiteDisp() + " reais.",
                            "Erro",JOptionPane.INFORMATION_MESSAGE);

                    txtConsultarProduto.setText(null);
                    txtDescProduto.setText(null);
                    txtQtdeVendida.setText(null);
                    txtConsultarProduto.requestFocus();
                    btnAdicionarItem.setEnabled(false);

                }
                //montando o table
                else{
                    //Fazendo associaÃ§Ã£o ItemPedido com o pedido
                    objPedido.addItemPedido(objItemPedido);
                    double subtotal;

                    subtotal = qtdeReq * objItemPedido.getProduto().getPreco();

                    String row [] = {objItemPedido.getProduto().getCodigo() ,
                                    objItemPedido.getProduto().getDescricao(),
                                    Double.toString(objItemPedido.getProduto().getPreco()),
                                    Double.toString(qtdeReq),
                                    Double.toString(subtotal)
                                    };
                tblItemP.addRow(row);

                totalPedido += subtotal;
                qtdeItensPedidos += qtdeReq;
                txtValorTotalPedido.setText(Double.toString(totalPedido));
                txtQtdeItensPedidos.setText(Double.toString(qtdeItensPedidos));
                //totalPedido, qtdeItensPedidos

                txtConsultarProduto.setText(null);
                txtDescProduto.setText(null);
                txtQtdeVendida.setText(null);
                btnAdicionarItem.setEnabled(false);
                btnRemoverItem.setEnabled(true);
                txtQtdeVendida.setEnabled(false);
                txtConsultarProduto.requestFocus();

                //Vai permitir a inclusÃ£o se houver ao menos 1 item
                if (objPedido.getItemPedido().size() > 0){
                    //quer dizer que ainda nÃ£o foi adicionado a coleÃ§Ã£o
                    if (posPedido == -1){
                        btnIncluir.setEnabled(true);
                    }

                    else 
                        btnIncluir.setEnabled(false);
                }

                else{
                    btnIncluir.setEnabled(false);

                }
                }

            }
        }
        
        if (tblItemP.getRowCount() > 0){
            btnAlterar.setEnabled(true);
        }
        
    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    private void txtfdDataPedidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfdDataPedidoFocusLost
        // Aqui vai instanciar o pedido quando o foco da data sair
        if (Pedido.validarData(txtfdDataPedido.getText())){
            boolean cmbx;
            objPedido = new Pedido(txtNumPedido.getText(), txtfdDataPedido.getText());
            
            if (cmbxFormaPagamento.getSelectedIndex() == 0){
                cmbx = false;
            }
            else{
                cmbx = true;
            }
            objPedido.setFormaPagto(cmbx);

            txtfdDataPedido.setEnabled(false);
            txtfdCPFCliente.setEnabled(true);
            btnConsultarCliente.setEnabled(true);
            btnIncluir.setEnabled(false);
            //cmbxFormaPagamento.setEnabled(false);
            txtfdCPFCliente.requestFocus();
            cbmxInicio = true;
            //limpando os campos

            //pegando a posiÃ§Ã£o atual do Array Pedido
            
        }
        
        else{
            JOptionPane.showMessageDialog(null,"Insira uma data vÃ¡lida!","Erro",JOptionPane.INFORMATION_MESSAGE);
            txtfdDataPedido.setText(null);
            txtfdDataPedido.requestFocus();
        }
    }//GEN-LAST:event_txtfdDataPedidoFocusLost

    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        // TODO add your handling code here:
        int op;
        
        if (tblItemPedido.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null,"Nenhuma linha foi selecionada","Erro",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        //Verifica se hÃ¡ apenas 1 item e se jÃ¡ foi instanciado ainda
        else if (posPedido != -1 && tblItemPedido.getRowCount() == 1){
            op = JOptionPane.showConfirmDialog(null,"Remover todos itens fara com que este pedido seja excluido. "
                    + " Tem certeza que deseja remover este Ãºltimo item deste pedido?",
                    "AtenÃ§Ã£o", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if (op == 0){
                excluirPedido();
            }
            
        }
        
        else{
            removerItem();
        }
        
        //Desativa a opÃ§Ã£o de remover itens caso esteja vazia
        if (tblItemPedido.getRowCount() == 0){
            btnRemoverItem.setEnabled(false);
            btnIncluir.setEnabled(false);
        }
        
        if (tblItemP.getRowCount() == 0){
            btnAlterar.setEnabled(false);
        }
        
    }//GEN-LAST:event_btnRemoverItemActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluirPedido();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtQtdeVendidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdeVendidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdeVendidaActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        double qtdeReq;
        boolean controle = true;
        
        if (tblItemPedido.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null,"Nenhuma linha foi selecionada",
                            "Erro",JOptionPane.INFORMATION_MESSAGE);
            controle = false;
        }
        
        //Conferindo se o campo estÃ¡ vazio
        else if(txtQtdeVendida.getText() == null || txtQtdeVendida.getText().trim().isEmpty()){
            
            JOptionPane.showMessageDialog(null,"Por favor insira um valor no campo \"Qtde Vendida\"" +
                     " VocÃª pode Inserir um nÃºmero maior que zero (n>0) para somar na Qtde ou"
                        + " menor que zero (n<0) para subtrair a Qtde",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
            txtQtdeVendida.requestFocus();
            controle = false;
            
        }
        else if (controle){
            try{
                qtdeReq = Double.parseDouble(txtQtdeVendida.getText());

            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null,"Por favor insira apenas numeros no campo."
                        + " VocÃª pode Inserir um nÃºmero maior que zero (n>0) para somar na Qtde ou"
                        + " menor que zero (n<0) para subtrair a Qtde",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
                txtQtdeVendida.requestFocus();
                txtQtdeVendida.setText(null);
                controle = false;
            }
        }
     
        if (controle){
            int a;
            String codPedidoTbl;
            qtdeReq = Double.parseDouble(txtQtdeVendida.getText());
            double qtdeProdDisp;
            codPedidoTbl = String.valueOf(tblItemP.getValueAt(tblItemPedido.getSelectedRow(), 0));
            
            ItemPedido ips = null;
            
            //Localizando o itemPedido
            for (a=0; a< objPedido.getItemPedido().size(); a++){
                
                if (codPedidoTbl.equals(objPedido.getItemPedido().get(a).getProduto().getCodigo())){
                    break;
                }
            }
            
            ips = objPedido.getItemPedido().get(a);
            qtdeProdDisp = ips.getProduto().getQtdeEstoque();
            
            //produto Ã© apagado caso chegue a um valor menor que zero
            
            //Analisar se a adiÃ§Ã£o vai ou nÃ£o extrapolar a qtde de estoque
            double updateQtde, precoAdd;
            updateQtde = ips.getQtdeVendida() + qtdeReq;
            precoAdd = ips.getProduto().getPreco() * qtdeReq;

            if (qtdeReq > qtdeProdDisp){
                JOptionPane.showMessageDialog(null, "A quantidade requisitada excede o estoque do produto. " +
                    "O produto " + cadProduto.get(posProduto).getDescricao() +
                    " tem o estoque atual de " + qtdeProdDisp + 
                    " unidades",
                    "Erro",JOptionPane.INFORMATION_MESSAGE);

                txtConsultarProduto.setText(null);
                txtDescProduto.setText(null);
                txtQtdeVendida.setText(null);
                txtConsultarProduto.requestFocus();
            }

            //Analisar se a adiÃ§Ã£o vai ou nÃ£o extrapolar o limite do cliente
            else if (objPedido.getCliente().getLimiteDisp() < precoAdd){
                JOptionPane.showMessageDialog(null,"O valor deste(s) item(ns) excede o limite disponivel do cliente."
                        + " O valor atual do limite do cliente \"" + cadPessoa.get(posCliente).getNome() + "\"" +
                        " Ã© de " + ((Cliente)cadPessoa.get(posCliente)).getLimiteDisp() + " reais.",
                        "Erro",JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                
                if (updateQtde <= 0){
                    int i;
                    
                    //Verifica se hÃ¡ apenas 1 item pedido para apagar
                    if (tblItemP.getRowCount() == 1 && posPedido != -1){
                        i = JOptionPane.showConfirmDialog(null,"A quantidade para a subtraÃ§Ã£o do" +
                                " item pedido na entrada \"Qtde Vendida\" farÃ¡ com que este Ãºltimo item seja excluido, logo"
                                + " o pedido tambÃ©m serÃ¡ excluido. Tem certeza que deseja realizar estÃ¡ alteraÃ§Ã£o?",
                    "AtenÃ§Ã£o", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        if (i == 0){
                            excluirPedido();}
                    }
                    //Se houver mais de 1 ainda, ele apaga somente o item pedido    
                    else{
                        removerItem();
                    }
                    
                }
                
                else {
                    //Atualizando a qtde vendida, cliente, grid, limpando, desativando e focando em campos/botoes
                    ips.setQtdeVendida(updateQtde);
                    //diminuindo o estoque do produto
                    ips.getProduto().setQtdeEstoque(ips.getProduto().getQtdeEstoque() - qtdeReq);
                    objPedido.getCliente().setLimiteCred(objPedido.getCliente().getLimiteDisp() - precoAdd);
                    //Atualizar o grid
                    tblItemP.setValueAt(updateQtde, tblItemPedido.getSelectedRow(), 3);
                    tblItemP.setValueAt(ips.getProduto().getPreco() * updateQtde, tblItemPedido.getSelectedRow(), 4);
                    double newTotalValor, newTotalQtde;
                    newTotalValor = Double.parseDouble(txtValorTotalPedido.getText()) + ips.getProduto().getPreco() * qtdeReq;
                    newTotalQtde = Double.parseDouble(txtQtdeItensPedidos.getText()) + qtdeReq;
                    txtValorTotalPedido.setText(Double.toString(newTotalValor));
                    txtQtdeItensPedidos.setText(Double.toString(newTotalQtde));

                    txtConsultarProduto.setText(null);
                    txtDescProduto.setText(null);
                    txtQtdeVendida.setText(null);
                    btnAdicionarItem.setEnabled(false);
                    txtConsultarProduto.requestFocus();

                    totalPedido = newTotalValor;
                    qtdeItensPedidos = newTotalQtde;
                }
            }
                
        }
        
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void cmbxFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxFormaPagamentoActionPerformed
        boolean cmbx;
        if (cbmxInicio){
            if (cmbxFormaPagamento.getSelectedIndex() == 0){
                    cmbx = false;
                }
            else{
                cmbx = true;
            }
            objPedido.setFormaPagto(cmbx);
        cbmxInicio = true;
        }
    }//GEN-LAST:event_cmbxFormaPagamentoActionPerformed

    private void tblItemPedidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblItemPedidoFocusGained
        txtQtdeVendida.setEnabled(true);
        txtQtdeVendida.requestFocus();
    }//GEN-LAST:event_tblItemPedidoFocusGained

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnConsultarCliente;
    private javax.swing.JButton btnConsultarPedido;
    private javax.swing.JButton btnConsultarProduto;
    private javax.swing.JButton btnConsultarVendedor;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cmbxFormaPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPFVendedor;
    private javax.swing.JLabel lblCPFcliente;
    private javax.swing.JLabel lblCodProduto;
    private javax.swing.JLabel lblNumPedido;
    private javax.swing.JLabel lblQtdeItnsPds;
    private javax.swing.JLabel lblQtdeVendida;
    private javax.swing.JLabel lblVlrTlPdo;
    private javax.swing.JPanel pnbItensPedido;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlPedido;
    private javax.swing.JPanel pnlVendedor;
    private javax.swing.JTable tblItemPedido;
    private javax.swing.JTextField txtConsultarProduto;
    private javax.swing.JTextField txtDescProduto;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeVendedor;
    private javax.swing.JTextField txtNumPedido;
    private javax.swing.JTextField txtQtdeItensPedidos;
    private javax.swing.JFormattedTextField txtQtdeVendida;
    private javax.swing.JTextField txtValorTotalPedido;
    private javax.swing.JFormattedTextField txtfdCPFCliente;
    private javax.swing.JFormattedTextField txtfdCPFVendedor;
    private javax.swing.JFormattedTextField txtfdDataPedido;
    // End of variables declaration//GEN-END:variables
    //instanciando o objPedido temporario
    private Pedido objPedido = null;
    private ArrayList<Pedido> cadPedido;
    private int posPedido;
    private ArrayList<Pessoa> cadPessoa;
    private int posVendedor;
    private int posCliente;
    private ArrayList<Produto> cadProduto;
    private int posProduto;
    private DefaultTableModel tblItemP;
    private double totalPedido, qtdeItensPedidos;
    int seq;
    private boolean cbmxInicio = false;
    
    public void removerItem()
    { 
        ItemPedido ip = objPedido.getItemPedido().get(tblItemPedido.getSelectedRow());
        double qtdeItemVend, qtdeRecup, qtdeItensVendidosOld, valorTotalPedidoOld, valorProd, ltDispCliente;

        valorProd = ip.getProduto().getPreco();
        qtdeItemVend = ip.getQtdeVendida();
        qtdeRecup = qtdeItemVend + ip.getProduto().getQtdeEstoque();
        ltDispCliente = objPedido.getCliente().getLimiteDisp() + qtdeItemVend * valorProd;
        //Restaura a quantidade de estoque do produto e o credito disponivel do cliente
        ip.getProduto().setQtdeEstoque(qtdeRecup);
        objPedido.getCliente().setLimiteCred(ltDispCliente);
        //Atualiza valores em demais campos
        qtdeItensVendidosOld = Double.parseDouble(txtQtdeItensPedidos.getText());
        valorTotalPedidoOld = Double.parseDouble(txtValorTotalPedido.getText());
        txtQtdeItensPedidos.setText(Double.toString(qtdeItensVendidosOld - qtdeItemVend));
        txtValorTotalPedido.setText(Double.toString(valorTotalPedidoOld - qtdeItemVend*valorProd));
        totalPedido = valorTotalPedidoOld - qtdeItemVend*valorProd;
        qtdeItensPedidos = qtdeItensVendidosOld - qtdeItemVend;
        //Remove o item pedido do obj Pedido
        objPedido.removeItempedido(ip);
        tblItemP.removeRow(tblItemPedido.getSelectedRow());
        txtQtdeVendida.setText(null);
        txtConsultarProduto.setText(null);
        txtConsultarProduto.requestFocus();
   
    }
    
    public void excluirPedido(){
        int a;
        double restauraEstoque;
        
        for (a=0; a < objPedido.getItemPedido().size(); a++){
            restauraEstoque = objPedido.getItemPedido().get(a).getQtdeVendida() + 
                    objPedido.getItemPedido().get(a).getProduto().getQtdeEstoque();

       objPedido.getItemPedido().get(a).getProduto().setQtdeEstoque(restauraEstoque);}
        
        //desfazendo alteraÃ§Ãµes cliente
        double recupCliCred;
        recupCliCred = Double.parseDouble(txtValorTotalPedido.getText());
        objPedido.getCliente().setLimiteCred(recupCliCred + objPedido.getCliente().getLimiteDisp());
        
        //Apagando as ligaÃ§Ãµes
        objPedido.getCliente().removePedido(objPedido);
        objPedido.getVendedor().removePedido(objPedido);
        cadPedido.remove(objPedido);
        objPedido = null;
        posPedido--;
        
        //Limpando a GUI
        while (tblItemPedido.getRowCount() > 0){
            tblItemP.removeRow(0);  
        }
        
        txtNumPedido.setText(null);
        txtfdDataPedido.setText(null);
        txtfdCPFCliente.setText(null);
        txtNomeCliente.setText(null);
        txtfdCPFVendedor.setText(null);
        txtNomeVendedor.setText(null);
        txtConsultarProduto.setText(null);
        txtDescProduto.setText(null);
        txtQtdeVendida.setText(null);
        txtValorTotalPedido.setText(null);
        txtQtdeItensPedidos.setText(null);
        
        //Desativando e ativando campos
        
        txtNumPedido.setEnabled(true);
        txtfdDataPedido.setEnabled(false);
        txtfdCPFCliente.setEnabled(false);
        txtfdCPFVendedor.setEnabled(false);;
        txtConsultarProduto.setEnabled(false);
        txtQtdeVendida.setEnabled(false);
        txtValorTotalPedido.setEnabled(false);
        txtQtdeItensPedidos.setEnabled(false);
        
        //botÃµes e etc
        btnConsultarPedido.setEnabled(true);
        cmbxFormaPagamento.setEnabled(false);
        btnConsultarCliente.setEnabled(false);
        btnConsultarVendedor.setEnabled(false);
        btnConsultarProduto.setEnabled(false);
        btnAdicionarItem.setEnabled(false);
        btnRemoverItem.setEnabled(false);
        btnIncluir.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        
        txtNumPedido.requestFocus();
        posPedido = -2;
    }
}



